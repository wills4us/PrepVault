# dashboard.py
import streamlit as st
from my_profile import show_profile, get_user_summary, get_profile_image, show_study_plan
from resume_analyzer import show_resume_review
from notifier import check_and_generate_notifications, show_notifications

# Trigger notifications when dashboard loads
check_and_generate_notifications()

def show_dashboard(username):
    st.sidebar.title(f"ðŸ‘‹ Welcome, {username}")
    tab = st.sidebar.selectbox("Choose a tab", [
        "Profile Overview",
        "Resume Analyzer",
        "Interview Simulation",
        "Progress Summary",
        "Notifications",
        "Logout"
    ])

    st.title("ðŸŽ“ PrepVault Dashboard")
    st.markdown("---")

    if tab == "Profile Overview":
        st.subheader("ðŸ‘¤ Your Profile")

        col1, col2 = st.columns([1, 3])
        with col1:
            profile_img = get_profile_image(username)
            if profile_img:
                st.image(profile_img, width=100)
            else:
                st.info("No profile image uploaded yet.")

        with col2:
            summary = get_user_summary(username)
            if summary:
                st.markdown(f"ðŸ’¡ **AI Summary**: _{summary}_")

        st.divider()
        show_profile(username)

    elif tab == "Resume Analyzer":
        st.subheader("ðŸ“„ Resume Analyzer (AI-Powered)")
        st.info("This tool uses AI to analyze your resume, suggest improvements, and auto-recommend matching job roles.")
        show_resume_review(username)

    elif tab == "Interview Simulation":
        from mock_interview import show_mock_interview  # âœ… FIXED: Import inside function to avoid circular import
        st.subheader("ðŸ§  AI-Powered Interview Practice")
        st.info("Answer dynamic questions generated by AI based on your resume and skills.")
        show_mock_interview(username)

    elif tab == "Progress Summary":
        st.subheader("ðŸ“Š Study Plan & Skill Gaps")
        st.info("This section summarizes whatâ€™s missing for your target role and suggests a custom study plan.")
        show_study_plan(username)

    elif tab == "Notifications":
        st.subheader("ðŸ”” Notifications")
        show_notifications(username)

    elif tab == "Logout":
        for key in list(st.session_state.keys()):
            del st.session_state[key]
        st.success("âœ… Youâ€™ve been logged out successfully.")
        st.rerun()
